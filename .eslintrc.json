{
  "root": true,
  "plugins": [
    "simple-import-sort",
    "unused-imports",
    "eslint-comments",
    "sonarjs",
    "react-hooks",
    "unused-imports",
    "react",
    "react-native",
    "import",
    "prettier"
  ],
  "extends": ["eslint-config-prettier", "plugin:sonarjs/recommended"],
  "ignorePatterns": ["public", ".cache", "node_modules", "server", "src/generated"],
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "overrides": [
    {
      "files": ["*.js"],
      "parser": "babel-eslint",
      "plugins": ["flowtype"],
      "rules": {
        "flowtype/define-flow-type": 1,
        "flowtype/use-flow-type": 1
      }
    },
    {
      "files": ["*.json", "*.json5", "*.jsonc"],
      "parser": "jsonc-eslint-parser",
      "rules": {
        // ESLint core rules known to cause problems with JSON.
        "prettier/prettier": [
          "error",
          {
            "semi": false
          }
        ],
        "strict": "off",
        "no-unused-expressions": "off"
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json",
        "tsconfigRootDir": "./"
      },
      "plugins": ["@typescript-eslint/eslint-plugin"],
      "rules": {
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "argsIgnorePattern": "^_"
          }
        ],
        "no-unused-vars": "off",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": 1,
        "no-undef": "off",
        "func-call-spacing": "off",
        "@typescript-eslint/func-call-spacing": 1
      }
    }
  ],
  "rules": {
    "array-callback-return": "error",
    "constructor-super": "error",
    "default-case": [
      "error",
      {
        "commentPattern": "^no default$"
      }
    ],
    "for-direction": "error",
    "getter-return": "error",
    "new-parens": "error",
    "no-array-constructor": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "except-parens"],
    "no-const-assign": "error",
    "no-constant-condition": "error",
    "no-control-regex": "error",
    "no-delete-var": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-global-assign": "error",
    "no-implied-eval": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": [
      "error",
      {
        "allowLoop": true,
        "allowSwitch": false
      }
    ],
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-misleading-character-class": "error",
    "no-multi-str": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-symbol": "error",
    "no-new-wrappers": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-undef": "error",
    "no-unexpected-multiline": "error",
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unused-labels": "error",
    "no-unused-vars": "error",
    "no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": false,
        "variables": false
      }
    ],
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-with": "error",
    "require-yield": "error",
    "unicode-bom": "error",
    "use-isnan": "error",
    // "json/*": ["error", "allowComments"],
    "import/no-relative-packages": "error",
    "import/no-duplicates": "error",
    "import/no-self-import": "error",
    // "import/no-unresolved": "error",
    "react-native/no-unused-styles": "error",
    "react-native/no-single-element-style-arrays": "error",
    "react-native/sort-styles": [
      "error",
      "asc",
      {
        "ignoreClassNames": false,
        "ignoreStyleProperties": false
      }
    ],
    "react-native/split-platform-components": [
      "error",
      {
        "iosPathRegex": "\\.ios.(js|jsx|ts|tsx)$",
        "androidPathRegex": "\\.android.(js|jsx|ts|tsx)$"
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/button-has-type": "error",
    "react/jsx-boolean-value": ["error", "never"],
    "react/jsx-curly-brace-presence": ["error", "never"],
    "react/jsx-key": "error",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-target-blank": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-sort-props": [
      "error",
      {
        "shorthandFirst": true
      }
    ],
    "sonarjs/no-duplicate-string": 0,
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/no-access-state-in-setstate": "error",
    // "react/no-array-index-key": "error",
    "react/no-danger": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-mount-set-state": "error",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-redundant-should-component-update": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": "error",
    "react/no-this-in-sfc": "error",
    "react/no-typos": "error",
    "react/no-unescaped-entities": "error",
    // "react/no-unknown-property": "error",
    "react/no-unused-prop-types": "error",
    "react/no-will-update-set-state": "error",
    "react/prefer-es6-class": "error",
    "react/require-render-return": "error",
    "react/self-closing-comp": "error",
    "react/sort-comp": "error",
    "react/style-prop-object": "error",
    "react/void-dom-elements-no-children": "error",
    "eslint-comments/disable-enable-pair": "error",
    "eslint-comments/no-aggregating-enable": "error",
    "eslint-comments/no-duplicate-disable": "error",
    "eslint-comments/no-unlimited-disable": "error",
    "eslint-comments/no-unused-enable": "error",
    "prettier/prettier": [
      "error",
      {
        "bracketSpacing": true,
        "parser": "typescript",
        "printWidth": 80,
        "semi": true,
        "singleQuote": true,
        "tabWidth": 2,
        "trailingComma": "all",
        "useTabs": false,
        "endOfLine": "auto"
      }
    ],
    "quotes": [
      2,
      "single",
      {
        "avoidEscape": true
      }
    ],
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [["^\\u0000"], ["^@?\\w"], ["^~/"], ["^../"], ["^./"], ["^.+\\.s?css$"]]
      }
    ],
    "simple-import-sort/exports": "error",
    "unused-imports/no-unused-imports": "error"
  }
}
